from telegram_bot.bot.main import bot, dp, types, db
from aiogram.types import Message, LabeledPrice, PreCheckoutQuery
from aiogram.dispatcher.filters import Text, Command
from aiogram.types.message import ContentType
from telegram_bot.bot.config import admin_id, API_TOKEN, PAYMENTS_TOKEN, item_url
from telegram_bot.bot.info import MESSAGES
from telegram_bot.bot.markups.Markups import main_Menu, Keyboard_inline, ReplyKeyboardRemove

PRICES = [LabeledPrice(label='–°–ø—Ä–∞–≤–∫–∞', amount = 1000000)]


async def send_hello(dp):
    await bot.send_message(chat_id=admin_id, text = '–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')


@dp.message_handler(Command('buy'))
async def buy_process(message: Message):
    await bot.send_invoice(message.chat.id,
                          title=MESSAGES['tm_title'],
                          description=MESSAGES['tm_description'],
                          provider_token=PAYMENTS_TOKEN,
                          currency='rub',
                          photo_url=item_url,
                          photo_height=512,
                          photo_width=512,
                          photo_size=512,
                          need_email=True,
                          need_phone_number=True,
                          is_flexible=False,
                          prices=PRICES,
                          start_parameter = 'example',
                          payload = 'some_invoice')


@dp.pre_checkout_query_handler(lambda query: True)
async def checkout_process(pre_checkout_query: PreCheckoutQuery):
    await bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)


@dp.message_handler(content_types=ContentType.SUCCESSFUL_PAYMENT)
async def succesful_payment(message: Message):
    await bot.send_message(message.chat.id, f"""–ü–ª–∞—Ç–µ–∂ –Ω–∞ —Å—É–º–º—É 10000 —Ä—É–±–ª–µ–π –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!üëèüèªüëèüèªüëèüèª
–í —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤‚åõ –Ω–∞ –≤–∞—à—É –ø–æ—á—Ç—É –ø—Ä–∏–¥—ë—Ç –≥–æ—Ç–æ–≤–∞—è —Å–ø—Ä–∞–≤–∫–∞‚úÖ""")


@dp.message_handler(Command('start'))
async def start_menu(message: Message):
    if (not db.user_exists(message.from_user.id)):
        db.add_user(message.from_user.id)
        await bot.send_message(message.from_user.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {username} ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à—É –ø–æ—á—Ç—É", reply_markup=main_Menu)
    await message.bot.send_message(message.from_user.id, MESSAGES['HELLO'], reply_markup=main_Menu)


@dp.message_handler(Text(equals=['user_btn', 'help_btn', 'join_btn']))
async def bottons(message: Message):
    await message.answer(message.text, reply_markup=ReplyKeyboardRemove())
    await message.delete()


@dp.message_handler(Text(equals=['üìï –ü–æ–º–æ—â—å', 'üÜï –ö–∞—Ä—Ç–æ—á–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞', 'üíµ –ü–æ–ª—É—á–∏—Ç—å —É—Å–ª—É–≥—É']))
async def kb_answers(message: Message):
    if message.text == 'üìï –ü–æ–º–æ—â—å':
        await message.answer(MESSAGES['INFO'])
    elif message.text == 'üÜï –ö–∞—Ä—Ç–æ—á–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞':
        await message.answer('–î–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π,—É–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–∞—à—É —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É, –∞ —Ç–∞–∫–∂–µ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /broker –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ–≥–æ –±—Ä–æ–∫–µ—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ ')
    elif message.text == 'üíµ –ü–æ–ª—É—á–∏—Ç—å —É—Å–ª—É–≥—É':
        await message.answer('–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —É—Å–ª—É–≥—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /buy –∏ —Å–ª–µ–¥—É–π—Ç–µ –¥–∞–π–ª—å–Ω–µ–π—à–∏–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º')


@dp.message_handler(Text(equals=['@']))
async def mail(message: Message):
    await message.answer(message.text, text='–ü–æ—á—Ç–∞ —É—Å–ø–µ—à–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!')
    await message.delete()


    # @dp.message_handler(Command('file'))
    # async def get_file(message: Message):
    #     await message.answer('–û—Ç–ª–∏—á–Ω–æ, –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤—ã–ø–∏—Å–∫—É —Å –≤–∞—à–µ–≥–æ –±–∞–Ω–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é –∫–æ–º–∞–Ω–¥ —á—Ç–æ–±—ã –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É')
    #     file = await dp.get_file(message.document.file_id)
    #     await dp.download_file(file.file_path,'D:\PythonProjects\Telegram bots\Docs\file_1.pdf')


@dp.message_handler(Command('broker'))
async def broker_choice(message: Message):
    await message.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ–≥–æ –±—Ä–æ–∫–µ—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞', reply_markup=Keyboard_inline)


@dp.callback_query_handler(text=['bks', 'open', 'vtb', 'tnkf'])
async def broker_value(call: types.CallbackQuery):
    if call.data == 'bks':
        await call.message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ë–ö–° –ë—Ä–æ–∫–µ—Ä. –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!\n–û—Å—Ç–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —á–∞—Ç –≤—ã–ø–∏—Å–∫—É –∏–∑ –±–∞–Ω–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ pdf –∏\n–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É –ø–æ –∫–æ–º–∞–Ω–¥–µ /buy ")
    if call.data == 'open':
        await call.message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –û—Ç–∫—Ä—ã—Ç–∏–µ. –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!\n–û—Å—Ç–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —á–∞—Ç –≤—ã–ø–∏—Å–∫—É –∏–∑ –±–∞–Ω–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ pdf –∏\n–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É –ø–æ –∫–æ–º–∞–Ω–¥–µ /buy ")
    if call.data == 'vtb':
        await call.message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –í–¢–ë –ö–∞–ø–∏—Ç–∞–ª –§–æ—Ä–µ–∫—Å. –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!\n–û—Å—Ç–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —á–∞—Ç –≤—ã–ø–∏—Å–∫—É –∏–∑ –±–∞–Ω–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ pdf –∏\n–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É –ø–æ –∫–æ–º–∞–Ω–¥–µ /buy ")
    if call.data == 'tnkf':
        await call.message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –¢–∏–Ω—å–∫–æ—Ñ—Ñ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏. –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!\n–û—Å—Ç–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —á–∞—Ç –≤—ã–ø–∏—Å–∫—É –∏–∑ –±–∞–Ω–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ pdf –∏\n–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É –ø–æ –∫–æ–º–∞–Ω–¥–µ /buy ")
    if call.data == 'alfa':
        await call.message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ê–ª—å—Ñ–∞ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏. –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!\n–û—Å—Ç–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —á–∞—Ç –≤—ã–ø–∏—Å–∫—É –∏–∑ –±–∞–Ω–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ pdf –∏\n–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É –ø–æ –∫–æ–º–∞–Ω–¥–µ /buy ")
    if call.data == 'freadom':
        await call.message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –§—Ä–∏–¥–æ–º –§–∏–Ω–∞–Ω—Å. –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!\n–û—Å—Ç–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —á–∞—Ç –≤—ã–ø–∏—Å–∫—É –∏–∑ –±–∞–Ω–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ pdf –∏\n–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É –ø–æ –∫–æ–º–∞–Ω–¥–µ /buy ")
    if call.data == 'finam':
        await call.message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –§–∏–Ω–∞–º. –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!\n–û—Å—Ç–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —á–∞—Ç –≤—ã–ø–∏—Å–∫—É –∏–∑ –±–∞–Ω–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ pdf –∏\n–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É –ø–æ –∫–æ–º–∞–Ω–¥–µ /buy ")
    if call.data == 'capital':
        await call.message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ IT Capital. –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!\n–û—Å—Ç–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —á–∞—Ç –≤—ã–ø–∏—Å–∫—É –∏–∑ –±–∞–Ω–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ pdf –∏\n–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É –ø–æ –∫–æ–º–∞–Ω–¥–µ /buy ")
    await call.answer()




# @dp.message_handler(commands =['start'])
# async def start(message: types.Message):
#     if(not db.user_exists(message.from_user.id)):
#         db.add_user(message.from_user.id)
#         await bot.send_message(message.from_user.id, text = HELLO)
#     else:
#         await bot.send_message(message.from_user.id,'–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!', reply_markup=nav.main_Menu)

# @dp.message_handler()
# async def bot_message(message: types.Message):
#     if message.chat.type == 'privite':
#         if message.text == 'üÜï –ö–∞—Ä—Ç–æ—á–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞':
#            user_nickname = "–í–∞—à –Ω–∏–∫ " + db.get_nickname(message.from_user.id)
#            await bot.send_message(message.from_user.id, user_nickname)

#         else:
#             if db.get_signup(message.from_user.id)== "setnickname":
#                 if(len(message.text) >15):
#                     await bot.send_message(message.from_user.id,'–ù–∏–∫–Ω–µ–π–º –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 15 —Å–∏–º–≤–æ–ª–æ–≤')
#                 elif '@' in message.text or '/' in message.text:
#                     await bot.send_message(message.from_user.id,'–ù–∏–∫–Ω–µ–π–º —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–π —Å–∏–º–≤–æ–ª')
#                 else:
#                     db.set_nickname(message.from_user.id,message.text)
#                     db.set_signup(message.from_user.id, 'done')
#                     await bot.send_message(message.from_user.id,'–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!', reply_markup=nav.main_Menu)
#             else:
#                 await bot.send_message(message.from_user.id, '–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é')
# @dp.message_handler()
# async def info_command(message: types.Message):
#     if message.text=='üìï–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
#         await bot.send_message(message.from_user.id,text=INFO)
#         await message.delete()
#     elif message.text=='üîô–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
#         await bot.send_message(message.from_user.id,'üîô–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',reply_markup=nav.main_Menu)
#         await message.delete()
#     elif message.text=='üîõ–î—Ä—É–≥–æ–µ':
#         await bot.send_message(message.from_user.id,'üîõ–î—Ä—É–≥–æ–µ',reply_markup=nav.other_Menu)
#         await message.delete()
#     elif message.text=='üíµ–ü–æ–ª—É—á–∏—Ç—å —É—Å–ª—É–≥—É':
#         await bot.send_message(message.from_user.id,'üíµ–ü–æ–ª—É—á–∏—Ç—å —É—Å–ª—É–≥—É')
#         await message.delete()
#     elif message.text=='üì©–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—ã–ø–∏—Å–∫—É':
#         await bot.send_message(message.from_user.id,'üì©–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—ã–ø–∏—Å–∫—É')
#         await message.delete()

#     else:
#         await message.reply('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞')
